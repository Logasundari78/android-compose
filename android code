package com.example.textinputvalidation

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.*
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.textinputvalidation.ui.theme.TextInputValidationTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            TextInputValidationTheme {
                // A surface container using the 'background' color from the theme
                Surface(modifier = Modifier.fillMaxSize(), color = MaterialTheme.colorScheme.background) {
                    TextInputValidationForm()
                }
            }
        }
    }
}

@Composable
fun TextInputValidationForm() {
    var userInput by remember { mutableStateOf("") }
    var isValid by remember { mutableStateOf(true) }
    var errorMessage by remember { mutableStateOf("") }

    // Form validation logic
    fun validateInput(input: String): Boolean {
        return if (input.isBlank()) {
            errorMessage = "Input cannot be empty"
            false
        } else if (input.length < 3) {
            errorMessage = "Input must be at least 3 characters long"
            false
        } else {
            errorMessage = ""
            true
        }
    }

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(16.dp),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Center
    ) {
        TextField(
            value = userInput,
            onValueChange = { newValue ->
                userInput = newValue
                // Reset validation error when input changes
                if (newValue.isNotEmpty()) isValid = true
            },
            label = { Text("Enter text") },
            isError = !isValid,
            modifier = Modifier.fillMaxWidth()
        )
        Spacer(modifier = Modifier.height(8.dp))
        Text(
            text = errorMessage,
            color = MaterialTheme.colorScheme.error,
            style = MaterialTheme.typography.bodySmall
        )
        Spacer(modifier = Modifier.height(16.dp))
        Button(
            onClick = {
                isValid = validateInput(userInput)
            },
            modifier = Modifier.fillMaxWidth()
        ) {
            Text("Validate Input")
        }
    }
}

@Preview(showBackground = true)
@Composable
fun DefaultPreview() {
    TextInputValidationTheme {
        TextInputValidationForm()
    }
}
